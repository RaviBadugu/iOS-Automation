"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createJSCookie = createJSCookie;
exports.createJWPCookie = createJWPCookie;
exports.getValue = getValue;
exports.expireCookie = expireCookie;
exports.default = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

const log = _appiumSupport.logger.getLogger('Cookie');

function convertCookie(value, converter) {
  if (value.indexOf('"') === 0) {
    value = value.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
  }

  let parsedValue;

  try {
    parsedValue = decodeURIComponent(value.replace(/\+/g, ' '));
  } catch (e) {
    log.warn(e);
  }

  return converter ? converter(parsedValue) : parsedValue;
}

function createJSCookie(key, value, options = {}) {
  return [encodeURIComponent(key), '=', value, options.expires ? `; expires=${options.expires}` : '', options.path ? `; path=${options.path}` : '', options.domain ? `; domain=${options.domain}` : '', options.secure ? '; secure' : ''].join('');
}

function createJWPCookie(key, cookieString, converter = null) {
  let result = {};
  let cookies = cookieString ? cookieString.split('; ') : [];
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = cookies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      let cookie = _step.value;
      let parts = cookie.split('=');
      let name = decodeURIComponent(parts.shift());
      let val = parts[0];

      if (key && key === name) {
        result.name = key;
        result.value = convertCookie(val, converter);
      } else {
        result[name] = convertCookie(val, converter);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return result;
}

function getValue(key, cookieString, converter = null) {
  let result = createJWPCookie(key, cookieString, converter);
  return _lodash.default.isUndefined(key) ? result : result.value;
}

function expireCookie(key, options) {
  return createJSCookie(key, '', _lodash.default.assign({}, options, {
    expires: 'Thu, 01 Jan 1970 00:00:00 GMT'
  }));
}

var _default = {
  createJSCookie,
  createJWPCookie,
  getValue,
  expireCookie
};
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb29raWVzLmpzIl0sIm5hbWVzIjpbImxvZyIsImxvZ2dlciIsImdldExvZ2dlciIsImNvbnZlcnRDb29raWUiLCJ2YWx1ZSIsImNvbnZlcnRlciIsImluZGV4T2YiLCJzbGljZSIsInJlcGxhY2UiLCJwYXJzZWRWYWx1ZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImUiLCJ3YXJuIiwiY3JlYXRlSlNDb29raWUiLCJrZXkiLCJvcHRpb25zIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZXhwaXJlcyIsInBhdGgiLCJkb21haW4iLCJzZWN1cmUiLCJqb2luIiwiY3JlYXRlSldQQ29va2llIiwiY29va2llU3RyaW5nIiwicmVzdWx0IiwiY29va2llcyIsInNwbGl0IiwiY29va2llIiwicGFydHMiLCJuYW1lIiwic2hpZnQiLCJ2YWwiLCJnZXRWYWx1ZSIsIl8iLCJpc1VuZGVmaW5lZCIsImV4cGlyZUNvb2tpZSIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQU9BOztBQUNBOztBQUdBLE1BQU1BLEdBQUcsR0FBR0Msc0JBQU9DLFNBQVAsQ0FBaUIsUUFBakIsQ0FBWjs7QUFJQSxTQUFTQyxhQUFULENBQXdCQyxLQUF4QixFQUErQkMsU0FBL0IsRUFBMEM7QUFDeEMsTUFBSUQsS0FBSyxDQUFDRSxPQUFOLENBQWMsR0FBZCxNQUF1QixDQUEzQixFQUE4QjtBQUc1QkYsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUNHLEtBQU4sQ0FBWSxDQUFaLEVBQWUsQ0FBQyxDQUFoQixFQUFtQkMsT0FBbkIsQ0FBMkIsTUFBM0IsRUFBbUMsR0FBbkMsRUFBd0NBLE9BQXhDLENBQWdELE9BQWhELEVBQXlELElBQXpELENBQVI7QUFDRDs7QUFFRCxNQUFJQyxXQUFKOztBQUNBLE1BQUk7QUFDRkEsSUFBQUEsV0FBVyxHQUFHQyxrQkFBa0IsQ0FBQ04sS0FBSyxDQUFDSSxPQUFOLENBQWMsS0FBZCxFQUFxQixHQUFyQixDQUFELENBQWhDO0FBQ0QsR0FG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ZW50IjpbIi8qXG4gKiBkZXJpdmVkIGZyb20galF1ZXJ5IENvb2tpZSBQbHVnaW4gdjEuNC4xXG4gKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZVxuICovXG5cbi8vIG5lZWRlZCB0byBjb21tdW5pY2F0ZS90cmFuc2xhdGUgYmV0d2VlbiBKU09OV2lyZSBjb29raWVzIGFuZCByZWd1bGFyIEphdmFTY3JpcHQgY29va2llc1xuXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnYXBwaXVtLXN1cHBvcnQnO1xuXG5cbmNvbnN0IGxvZyA9IGxvZ2dlci5nZXRMb2dnZXIoJ0Nvb2tpZScpO1xuXG4vLyBwYXJzZXMgdGhlIHZhbHVlIGlmIG5lZWRlZCBhbmQgY29udmVydHMgdGhlIHZhbHVlIGlmIGEgY29udmVydGVyIGlzIHByb3ZpZGVkXG4vLyBpbnRlcm5hbCBmdW5jdGlvbiwgbm90IGV4cG9ydGVkXG5mdW5jdGlvbiBjb252ZXJ0Q29va2llICh2YWx1ZSwgY29udmVydGVyKSB7XG4gIGlmICh2YWx1ZS5pbmRleE9mKCdcIicpID09PSAwKSB7XG4gICAgLy8gdGhpcyBpcyBhIHF1b3RlZCBjb29raWVkIGFjY29yZGluZyB0byBSRkMyMDY4XG4gICAgLy8gcmVtb3ZlIGVuY2xvc2luZyBxdW90ZXMgYW5kIGludGVybmFsIHF1b3RlcyBhbmQgYmFja3NsYXNoZXNcbiAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDEsIC0xKS5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJykucmVwbGFjZSgvXFxcXFxcXFwvZywgJ1xcXFwnKTtcbiAgfVxuXG4gIGxldCBwYXJzZWRWYWx1ZTtcbiAgdHJ5IHtcbiAgICBwYXJzZWRWYWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBubyBuZWVkIHRvIGZhaWwgaWYgd2UgY2FuJ3QgZGVjb2RlXG4gICAgbG9nLndhcm4oZSk7XG4gIH1cblxuICByZXR1cm4gY29udmVydGVyID8gY29udmVydGVyKHBhcnNlZFZhbHVlKSA6IHBhcnNlZFZhbHVlO1xufVxuXG4vLyB0YWtlcyBhcmd1bWVudHMgZ2l2ZW4gYW5kIGNyZWF0ZXMgYSBKYXZhU2NyaXB0IENvb2tpZVxuZnVuY3Rpb24gY3JlYXRlSlNDb29raWUgKGtleSwgdmFsdWUsIG9wdGlvbnMgPSB7fSkge1xuICByZXR1cm4gW1xuICAgIGVuY29kZVVSSUNvbXBvbmVudChrZXkpLCAnPScsIHZhbHVlLFxuICAgIG9wdGlvbnMuZXhwaXJlc1xuICAgICAgPyBgOyBleHBpcmVzPSR7b3B0aW9ucy5leHBpcmVzfWBcbiAgICAgIDogJycsXG4gICAgb3B0aW9ucy5wYXRoXG4gICAgICA/IGA7IHBhdGg9JHtvcHRpb25zLnBhdGh9YFxuICAgICAgOiAnJyxcbiAgICBvcHRpb25zLmRvbWFpblxuICAgICAgPyBgOyBkb21haW49JHtvcHRpb25zLmRvbWFpbn1gXG4gICAgICA6ICcnLFxuICAgIG9wdGlvbnMuc2VjdXJlXG4gICAgICA/ICc7IHNlY3VyZSdcbiAgICAgIDogJydcbiAgXS5qb2luKCcnKTtcbn1cblxuLy8gdGFrZXMgdGhlIEphdmFTY3JpcHQgY29va2llU3RyaW5nIGFuZCB0cmFuc2xhdGVzIGl0IGludG8gYSBKU09OV2lyZSBmb3JtYXR0ZWQgY29va2llXG5mdW5jdGlvbiBjcmVhdGVKV1BDb29raWUgKGtleSwgY29va2llU3RyaW5nLCBjb252ZXJ0ZXIgPSBudWxsKSB7XG4gIGxldCByZXN1bHQgPSB7fTtcbiAgbGV0IGNvb2tpZXMgPSBjb29raWVTdHJpbmcgPyBjb29raWVTdHJpbmcuc3BsaXQoJzsgJykgOiBbXTtcbiAgZm9yIChsZXQgY29va2llIG9mIGNvb2tpZXMpIHtcbiAgICBsZXQgcGFydHMgPSBjb29raWUuc3BsaXQoJz0nKTtcblxuICAgIC8vIGdldCB0aGUgZmlyc3QgYW5kIHNlY29uZCBlbGVtZW50IGFzIG5hbWUgYW5kIHZhbHVlXG4gICAgbGV0IG5hbWUgPSBkZWNvZGVVUklDb21wb25lbnQocGFydHMuc2hpZnQoKSk7XG4gICAgbGV0IHZhbCA9IHBhcnRzWzBdO1xuXG4gICAgLy8gaWYgbmFtZSBpcyBrZXksIHRoaXMgaXMgdGhlIGNlbnRyYWwgZWxlbWVudCBvZiB0aGUgY29va2llLCBzbyBhZGQgYXMgYG5hbWVgXG4gICAgLy8gb3RoZXJ3aXNlIGl0IGlzIGFuIG9wdGlvbmFsIGVsZW1lbnRcbiAgICBpZiAoa2V5ICYmIGtleSA9PT0gbmFtZSkge1xuICAgICAgcmVzdWx0Lm5hbWUgPSBrZXk7XG4gICAgICByZXN1bHQudmFsdWUgPSBjb252ZXJ0Q29va2llKHZhbCwgY29udmVydGVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0W25hbWVdID0gY29udmVydENvb2tpZSh2YWwsIGNvbnZlcnRlcik7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8vIHRha2VzIGEgSmF2YVNjcmlwdCBjb29raWVzdHJpbmcgYW5kIHBhcnNlcyBpdCBmb3IgdGhlIHZhbHVlIGdpdmVuIHRoZSBrZXlcbmZ1bmN0aW9uIGdldFZhbHVlIChrZXksIGNvb2tpZVN0cmluZywgY29udmVydGVyID0gbnVsbCkge1xuICBsZXQgcmVzdWx0ID0gY3JlYXRlSldQQ29va2llKGtleSwgY29va2llU3RyaW5nLCBjb252ZXJ0ZXIpO1xuXG4gIC8vIGlmIGBrZXlgIGlzIHVuZGVmaW5lZCB3ZSB3YW50IHRoZSBlbnRpcmUgY29va2llXG4gIHJldHVybiBfLmlzVW5kZWZpbmVkKGtleSkgPyByZXN1bHQgOiByZXN1bHQudmFsdWU7XG59XG5cblxuLy8gcmV0dXJucyBhIGNvb2tpZSB0aGF0IGV4cGlyZXMgb24gMDEgSmFuIDE5NzBcbi8vIGFzc2lnbiB0aGUgcmV0dXJuZWQgY29va2llIHRvIGFuIGV4aXN0aW5nIGNvb2tpZSB0byBkZWxldGUgdGhhdCBjb29raWVcbmZ1bmN0aW9uIGV4cGlyZUNvb2tpZSAoa2V5LCBvcHRpb25zKSB7XG4gIC8vIG92ZXJyaWRlIGBleHBpcmVzYCBpbiBgb3B0aW9uc2AsIGFuZCB0aGVuIG1ha2UgdGhlIGNvb2tpZVxuICByZXR1cm4gY3JlYXRlSlNDb29raWUoa2V5LCAnJywgXy5hc3NpZ24oe30sIG9wdGlvbnMsIHtcbiAgICBleHBpcmVzOiAnVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQnXG4gIH0pKTtcbn1cblxuLy8gZXhwb3J0IGluZGl2aWR1YWxseSBhbmQgYWxzbyAoYXMgZGVmYXVsdCkgYXMgYW4gb2JqZWN0XG5leHBvcnQgeyBjcmVhdGVKU0Nvb2tpZSwgY3JlYXRlSldQQ29va2llLCBnZXRWYWx1ZSwgZXhwaXJlQ29va2llIH07XG5leHBvcnQgZGVmYXVsdCB7IGNyZWF0ZUpTQ29va2llLCBjcmVhdGVKV1BDb29raWUsIGdldFZhbHVlLCBleHBpcmVDb29raWUgfTtcbiJdLCJmaWxlIjoibGliL2Nvb2tpZXMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
