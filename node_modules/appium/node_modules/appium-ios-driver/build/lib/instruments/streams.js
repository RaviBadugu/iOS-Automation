"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.outputStream = outputStream;
exports.errorStream = errorStream;
exports.webSocketAlertStream = webSocketAlertStream;
exports.dumpStream = dumpStream;

var _logger = _interopRequireDefault(require("./logger"));

var _through = _interopRequireDefault(require("through"));

function clearBufferChars(output) {
  let re = /(\n|^)\*+\n?/g;
  output = output.toString();
  output = output.replace(re, '');
  return output;
}

function outputStream() {
  return (0, _through.default)(function outputStreamHandler(output) {
    output = clearBufferChars(output);

    if (output !== '') {
      output = output.replace(/\n$/m, '');
      output = output.replace(/\n/m, '\n       ');
      output = `[INST] ${output}`;
      output = output.green;

      _logger.default.debug(output);
    }

    this.queue(output);
  });
}

function errorStream() {
  return (0, _through.default)(function errorStreamHandler(output) {
    output = output.replace(/\n$/m, '');
    output = `[INST STDERR] ${output}`;
    output = output.yellow;

    _logger.default.debug(output);

    this.queue(output);
  });
}

function webSocketAlertStream(webSocket) {
  return (0, _through.default)(function webSocketAlertStreamHandler(output) {
    if (webSocket) {
      let re = /Call to onAlert returned 'YES'/;

      if (re.test(output)) {
        _logger.default.debug('Emiting alert message...');

        webSocket.sockets.emit('alert', {
          message: output
        });
      }
    }

    this.queue(output);
  });
}

function dumpStream() {
  return (0, _through.default)(function nullStreamHandler() {});
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbnN0cnVtZW50cy9zdHJlYW1zLmpzIl0sIm5hbWVzIjpbImNsZWFyQnVmZmVyQ2hhcnMiLCJvdXRwdXQiLCJyZSIsInRvU3RyaW5nIiwicmVwbGFjZSIsIm91dHB1dFN0cmVhbSIsIm91dHB1dFN0cmVhbUhhbmRsZXIiLCJncmVlbiIsImxvZyIsImRlYnVnIiwicXVldWUiLCJlcnJvclN0cmVhbSIsImVycm9yU3RyZWFtSGFuZGxlciIsInllbGxvdyIsIndlYlNvY2tldEFsZXJ0U3RyZWFtIiwid2ViU29ja2V0Iiwid2ViU29ja2V0QWxlcnRTdHJlYW1IYW5kbGVyIiwidGVzdCIsInNvY2tldHMiLCJlbWl0IiwibWVzc2FnZSIsImR1bXBTdHJlYW0iLCJudWxsU3RyZWFtSGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBR0EsU0FBU0EsZ0JBQVQsQ0FBMkJDLE1BQTNCLEVBQW1DO0FBSWpDLE1BQUlDLEVBQUUsR0FBRyxlQUFUO0FBQ0FELEVBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDRSxRQUFQLEVBQVQ7QUFDQUYsRUFBQUEsTUFBTSxHQUFHQSxNQUFNLENBQUNHLE9BQVAsQ0FBZUYsRUFBZixFQUFtQixFQUFuQixDQUFUO0FBQ0EsU0FBT0QsTUFBUDtBQUNEOztBQUVELFNBQVNJLFlBQVQsR0FBeUI7QUFDdkIsU0FBTyxzQkFBUSxTQUFTQyxtQkFBVCxDQUE4QkwsTUFBOUIsRUFBc0M7QUFDbkRBLElBQUFBLE1BQU0sR0FBR0QsZ0JBQWdCLENBQUNDLE1BQUQsQ0FBekI7O0FBR0EsUUFBSUEsTUFBTSxLQUFLLEVBQWYsRUFBbUI7QUFFakJBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDRyxPQUFQLENBQWUsTUFBZixFQUF1QixFQUF2QixDQUFUO0FBRUFILE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDRyxPQUFQLENBQWUsS0FBZixFQUFzQixXQUF0QixDQUFUO0FBQ0FILE1BQUFBLE1BQU0sR0FBSSxVQUFTQSxNQUFPLEVBQTFCO0FBQ0FBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDTSxLQUFoQjs7QUFDQUMsc0JBQUlDLEtBQUosQ0FBVVIsTUFBVjtBQUNEOztBQUNELFNBQUtTLEtBQUwsQ0FBV1QsTUFBWDtBQUNELEdBZE0sQ0FBUDtBQWVEOztBQUVELFNBQVNVLFdBQVQsR0FBd0I7QUFDdEIsU0FBTyxzQkFBUSxTQUFTQyxrQkFBVCxDQUE2QlgsTUFBN0IsRUFBcUM7QUFFbERBLElBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDRyxPQUFQLENBQWUsTUFBZixFQUF1QixFQUF2QixDQUFUO0FBQ0FILElBQUFBLE1BQU0sR0FBSyxpQkFBZ0JBLE1BQU8sRUFBbEM7QUFDQUEsSUFBQUEsTUFBTSxHQUFHQSxNQUFNLENBQUNZLE1BQWhCOztBQUNBTCxvQkFBSUMsS0FBSixDQUFVUixNQUFWOztBQUNBLFNBQUtTLEtBQUwsQ0FBV1QsTUFBWDtBQUNELEdBUE0sQ0FBUDtBQVFEOztBQUVELFNBQVNhLG9CQUFULENBQStCQyxTQUEvQixFQUEwQztBQUN4QyxTQUFPLHNCQUFRLFNBQVNDLDJCQUFULENBQXNDZixNQUF0QyxFQUE4QztBQUMzRCxRQUFJYyxTQUFKLEVBQWU7QUFDYixVQUFJYixFQUFFLEdBQUcsZ0NBQVQ7O0FBQ0EsVUFBSUEsRUFBRSxDQUFDZSxJQUFILENBQVFoQixNQUFSLENBQUosRUFBcUI7QUFDbkJPLHdCQUFJQyxLQUFKLENBQVUsMEJBQVY7O0FBQ0FNLFFBQUFBLFNBQVMsQ0FBQ0csT0FBVixDQUFrQkMsSUFBbEIsQ0FBdUIsT0FBdkIsRUFBZ0M7QUFBQ0MsVUFBQUEsT0FBTyxFQUFFbkI7QUFBVixTQUFoQztBQUNEO0FBQ0Y7O0FBQ0QsU0FBS1MsS0FBTCxDQUFXVCxNQUFYO0FBQ0QsR0FUTSxDQUFQO0FBVUQ7O0FBRUQsU0FBU29CLFVBQVQsR0FBdUI7QUFDckIsU0FBTyxzQkFBUSxTQUFTQyxpQkFBVCxHQUE4QixDQUFpQyxDQUF2RSxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB0aHJvdWdoIGZyb20gJ3Rocm91Z2gnO1xuXG5cbmZ1bmN0aW9uIGNsZWFyQnVmZmVyQ2hhcnMgKG91dHB1dCkge1xuICAvLyBJbnN0cnVtZW50cyBvdXRwdXQgaXMgYnVmZmVyZWQsIHNvIGZvciBlYWNoIGxvZyBvdXRwdXQgd2UgYWxzbyBvdXRwdXRcbiAgLy8gYSBzdHJlYW0gb2YgdmVyeSBtYW55ICoqKiouIFRoaXMgZnVuY3Rpb24gc3RyaXBzIHRob3NlIG91dCBzbyBhbGwgd2VcbiAgLy8gZ2V0IGlzIHRoZSBsb2cgb3V0cHV0IHdlIGNhcmUgYWJvdXRcbiAgbGV0IHJlID0gLyhcXG58XilcXCorXFxuPy9nO1xuICBvdXRwdXQgPSBvdXRwdXQudG9TdHJpbmcoKTtcbiAgb3V0cHV0ID0gb3V0cHV0LnJlcGxhY2UocmUsICcnKTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuZnVuY3Rpb24gb3V0cHV0U3RyZWFtICgpIHtcbiAgcmV0dXJuIHRocm91Z2goZnVuY3Rpb24gb3V0cHV0U3RyZWFtSGFuZGxlciAob3V0cHV0KSB7XG4gICAgb3V0cHV0ID0gY2xlYXJCdWZmZXJDaGFycyhvdXRwdXQpO1xuXG4gICAgLy8gaWYgd2UgaGF2ZSBtdWx0aXBsZSBsb2cgbGluZXMsIGluZGVudCBub24tZmlyc3Qgb25lc1xuICAgIGlmIChvdXRwdXQgIT09ICcnKSB7XG4gICAgICAvLyBnZXQgcmlkIG9mIG5ld2xpbmUgYXQgdGhlIGVuZFxuICAgICAgb3V0cHV0ID0gb3V0cHV0LnJlcGxhY2UoL1xcbiQvbSwgJycpO1xuICAgICAgLy8gaW5kZW50IGluc3RlYWQgb2YgbmV3bGluZVxuICAgICAgb3V0cHV0ID0gb3V0cHV0LnJlcGxhY2UoL1xcbi9tLCAnXFxuICAgICAgICcpO1xuICAgICAgb3V0cHV0ID0gYFtJTlNUXSAke291dHB1dH1gO1xuICAgICAgb3V0cHV0ID0gb3V0cHV0LmdyZWVuO1xuICAgICAgbG9nLmRlYnVnKG91dHB1dCk7XG4gICAgfVxuICAgIHRoaXMucXVldWUob3V0cHV0KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGVycm9yU3RyZWFtICgpIHtcbiAgcmV0dXJuIHRocm91Z2goZnVuY3Rpb24gZXJyb3JTdHJlYW1IYW5kbGVyIChvdXRwdXQpIHtcbiAgICAvLyBnZXQgcmlkIG9mIG5ld2xpbmUgYXQgdGhlIGVuZFxuICAgIG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKC9cXG4kL20sICcnKTtcbiAgICBvdXRwdXQgPSAoYFtJTlNUIFNUREVSUl0gJHtvdXRwdXR9YCk7XG4gICAgb3V0cHV0ID0gb3V0cHV0LnllbGxvdztcbiAgICBsb2cuZGVidWcob3V0cHV0KTtcbiAgICB0aGlzLnF1ZXVlKG91dHB1dCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiB3ZWJTb2NrZXRBbGVydFN0cmVhbSAod2ViU29ja2V0KSB7XG4gIHJldHVybiB0aHJvdWdoKGZ1bmN0aW9uIHdlYlNvY2tldEFsZXJ0U3RyZWFtSGFuZGxlciAob3V0cHV0KSB7XG4gICAgaWYgKHdlYlNvY2tldCkge1xuICAgICAgbGV0IHJlID0gL0NhbGwgdG8gb25BbGVydCByZXR1cm5lZCAnWUVTJy87XG4gICAgICBpZiAocmUudGVzdChvdXRwdXQpKSB7XG4gICAgICAgIGxvZy5kZWJ1ZygnRW1pdGluZyBhbGVydCBtZXNzYWdlLi4uJyk7XG4gICAgICAgIHdlYlNvY2tldC5zb2NrZXRzLmVtaXQoJ2FsZXJ0Jywge21lc3NhZ2U6IG91dHB1dH0pO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLnF1ZXVlKG91dHB1dCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBkdW1wU3RyZWFtICgpIHtcbiAgcmV0dXJuIHRocm91Z2goZnVuY3Rpb24gbnVsbFN0cmVhbUhhbmRsZXIgKCkgeyAvKiBpZ25vcmUgYWxsIHN0cmVhbSBvdXRwdXQgKi99KTtcbn1cblxuZXhwb3J0IHsgb3V0cHV0U3RyZWFtLCBlcnJvclN0cmVhbSwgd2ViU29ja2V0QWxlcnRTdHJlYW0sIGR1bXBTdHJlYW0gfTtcbiJdLCJmaWxlIjoibGliL2luc3RydW1lbnRzL3N0cmVhbXMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
