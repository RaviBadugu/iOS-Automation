"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.install = install;
exports.needsInstall = needsInstall;
exports.SAFARI_LAUNCHER_BUNDLE = exports.SAFARI_LAUNCHER_APP_FILE = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _appiumXcode = _interopRequireDefault(require("appium-xcode"));

var _appiumSupport = require("appium-support");

var _teen_process = require("teen_process");

var _logger = _interopRequireDefault(require("./logger"));

var _path = _interopRequireDefault(require("path"));

const SAFARI_LAUNCHER_DIR = _path.default.resolve(__dirname, '..', '..', 'build', 'SafariLauncher');

const SAFARI_LAUNCHER_APP_FILE = _path.default.resolve(__dirname, '..', '..', 'build', 'SafariLauncher', 'SafariLauncher.app');

exports.SAFARI_LAUNCHER_APP_FILE = SAFARI_LAUNCHER_APP_FILE;

const SAFARI_LAUNCHER_REPO = _path.default.resolve(__dirname, '..', '..', 'node_modules', 'safari-launcher');

const SAFARI_LAUNCHER_CONFIG_FILE = _path.default.resolve(SAFARI_LAUNCHER_REPO, 'build.xcconfig');

const SAFARI_LAUNCHER_BUNDLE = 'com.bytearc.SafariLauncher';
exports.SAFARI_LAUNCHER_BUNDLE = SAFARI_LAUNCHER_BUNDLE;
const sdks = ['iphoneos'];

function cleanApp(_x, _x2) {
  return _cleanApp.apply(this, arguments);
}

function _cleanApp() {
  _cleanApp = (0, _asyncToGenerator2.default)(function* (appRoot, sdk) {
    _logger.default.debug(`Cleaning SafariLauncher for ${sdk}`);

    try {
      yield (0, _teen_process.exec)('xcodebuild', ['-sdk', sdk, 'clean'], {
        cwd: appRoot
      });
    } catch (err) {
      _logger.default.error(err);

      throw err;
    }
  });
  return _cleanApp.apply(this, arguments);
}

function cleanAll() {
  return _cleanAll.apply(this, arguments);
}

function _cleanAll() {
  _cleanAll = (0, _asyncToGenerator2.default)(function* () {
    _logger.default.info("Cleaning SafariLauncher");

    let sdkVer = yield _appiumXcode.default.getMaxIOSSDK();

    for (var _i = 0; _i < sdks.length; _i++) {
      let sdk = sdks[_i];
      let fullSdk = sdk + sdkVer;
      yield cleanApp(SAFARI_LAUNCHER_REPO, fullSdk);
    }

    yield _appiumSupport.fs.rimraf(SAFARI_LAUNCHER_DIR);

    _logger.default.info("Finished cleaning SafariLauncher");
  });
  return _cleanAll.apply(this, arguments);
}

function buildApp(_x3, _x4) {
  return _buildApp.apply(this, arguments);
}

function _buildApp() {
  _buildApp = (0, _asyncToGenerator2.default)(function* (appRoot, sdk) {
    try {
      _logger.default.debug(`Building SafariLauncher for ${sdk}`);

      let args = ['-sdk', sdk, '-xcconfig', SAFARI_LAUNCHER_CONFIG_FILE];
      yield (0, _teen_process.exec)('xcodebuild', args, {
        cwd: appRoot
      });
    } catch (err) {
      _logger.default.error(err);

      throw err;
    }
  });
  return _buildApp.apply(this, arguments);
}

function buildAll() {
  return _buildAll.apply(this, arguments);
}

function _buildAll() {
  _buildAll = (0, _asyncToGenerator2.default)(function* () {
    _logger.default.info("Building SafariLauncher");

    let sdkVer = yield _appiumXcode.default.getMaxIOSSDK();

    for (var _i2 = 0; _i2 < sdks.length; _i2++) {
      let sdk = sdks[_i2];
      let fullSdk = sdk + sdkVer;
      yield buildApp(SAFARI_LAUNCHER_REPO, fullSdk);
    }

    _logger.default.info("Finished building SafariLauncher");
  });
  return _buildAll.apply(this, arguments);
}

function renameAll() {
  return _renameAll.apply(this, arguments);
}

function _renameAll() {
  _renameAll = (0, _asyncToGenerator2.default)(function* () {
    try {
      _logger.default.info("Renaming SafariLauncher");

      if (!(yield _appiumSupport.fs.exists(SAFARI_LAUNCHER_DIR))) {
        yield _appiumSupport.fs.mkdir(SAFARI_LAUNCHER_DIR);
      }

      let file = _path.default.resolve(SAFARI_LAUNCHER_REPO, 'build', 'Release-iphoneos', 'SafariLauncher.app');

      yield _appiumSupport.fs.rename(file, SAFARI_LAUNCHER_APP_FILE);

      _logger.default.info("Finished renaming SafariLauncher");
    } catch (err) {
      _logger.default.warn("Could not rename SafariLauncher");

      _logger.default.errorAndThrow(err);
    }
  });
  return _renameAll.apply(this, arguments);
}

function updateConfig() {
  return _updateConfig.apply(this, arguments);
}

function _updateConfig() {
  _updateConfig = (0, _asyncToGenerator2.default)(function* () {
    _logger.default.info('Updating config for Safari Launcher');

    let config = `BUNDLE_ID = ${SAFARI_LAUNCHER_BUNDLE}
IDENTITY_NAME = iPhone Developer
IDENTITY_CODE =`;
    yield _appiumSupport.fs.writeFile(SAFARI_LAUNCHER_CONFIG_FILE, config);
  });
  return _updateConfig.apply(this, arguments);
}

function install() {
  return _install.apply(this, arguments);
}

function _install() {
  _install = (0, _asyncToGenerator2.default)(function* () {
    yield cleanAll();
    yield updateConfig();
    yield buildAll();
    yield renameAll();
  });
  return _install.apply(this, arguments);
}

function needsInstall() {
  return _needsInstall.apply(this, arguments);
}

function _needsInstall() {
  _needsInstall = (0, _asyncToGenerator2.default)(function* () {
    _logger.default.debug(`Checking for presence of SafariLauncher at '${SAFARI_LAUNCHER_APP_FILE}'`);

    let exists = yield _appiumSupport.fs.exists(SAFARI_LAUNCHER_APP_FILE);

    _logger.default.debug(`SafariLauncher ${exists ? 'exists' : 'does not exist'}`);

    return !exists;
  });
  return _needsInstall.apply(this, arguments);
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,
