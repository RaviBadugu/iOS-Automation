"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;
commands.getDevicePixelRatio = (0, _asyncToGenerator2.default)(function* () {
  const screenHeight = (yield this.getWindowSize()).height;
  const screenHeightOfPlusDevices = 736;
  return screenHeight === screenHeightOfPlusDevices ? 3.0 : 2.0;
});
commands.getViewportRect = (0, _asyncToGenerator2.default)(function* () {
  const scale = yield this.getDevicePixelRatio();
  const statusBarHeight = Math.round((yield this.getStatusBarHeight()) * scale);
  const windowSize = yield this.getWindowSize();
  return {
    left: 0,
    top: statusBarHeight,
    width: windowSize.width * scale,
    height: windowSize.height * scale - statusBarHeight
  };
});
commands.getStatusBarHeight = (0, _asyncToGenerator2.default)(function* () {
  const command = 'UIATarget.localTarget().frontMostApp().statusBar().rect().size.height;';
  return yield this.uiAutoClient.sendCommand(command);
});
Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9kZXZpY2UuanMiXSwibmFtZXMiOlsiY29tbWFuZHMiLCJoZWxwZXJzIiwiZXh0ZW5zaW9ucyIsImdldERldmljZVBpeGVsUmF0aW8iLCJzY3JlZW5IZWlnaHQiLCJnZXRXaW5kb3dTaXplIiwiaGVpZ2h0Iiwic2NyZWVuSGVpZ2h0T2ZQbHVzRGV2aWNlcyIsImdldFZpZXdwb3J0UmVjdCIsInNjYWxlIiwic3RhdHVzQmFySGVpZ2h0IiwiTWF0aCIsInJvdW5kIiwiZ2V0U3RhdHVzQmFySGVpZ2h0Iiwid2luZG93U2l6ZSIsImxlZnQiLCJ0b3AiLCJ3aWR0aCIsImNvbW1hbmQiLCJ1aUF1dG9DbGllbnQiLCJzZW5kQ29tbWFuZCIsIk9iamVjdCIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxRQUFRLEdBQUcsRUFBZjtBQUFBLElBQW1CQyxPQUFPLEdBQUcsRUFBN0I7QUFBQSxJQUFpQ0MsVUFBVSxHQUFHLEVBQTlDOzs7QUFHQUYsUUFBUSxDQUFDRyxtQkFBVCxtQ0FBK0IsYUFBa0I7QUFDL0MsUUFBTUMsWUFBWSxHQUFHLE9BQU8sS0FBS0MsYUFBTCxFQUFQLEVBQTZCQyxNQUFsRDtBQUVBLFFBQU1DLHlCQUF5QixHQUFHLEdBQWxDO0FBQ0EsU0FBT0gsWUFBWSxLQUFLRyx5QkFBakIsR0FBNkMsR0FBN0MsR0FBbUQsR0FBMUQ7QUFDRCxDQUxEO0FBT0FQLFFBQVEsQ0FBQ1EsZUFBVCxtQ0FBMkIsYUFBa0I7QUFDM0MsUUFBTUMsS0FBSyxTQUFTLEtBQUtOLG1CQUFMLEVBQXBCO0FBRUEsUUFBTU8sZUFBZSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBVyxPQUFNLEtBQUtDLGtCQUFMLEVBQU4sSUFBa0NKLEtBQTdDLENBQXhCO0FBQ0EsUUFBTUssVUFBVSxTQUFTLEtBQUtULGFBQUwsRUFBekI7QUFJQSxTQUFPO0FBQ0xVLElBQUFBLElBQUksRUFBRSxDQUREO0FBRUxDLElBQUFBLEdBQUcsRUFBRU4sZUFGQTtBQUdMTyxJQUFBQSxLQUFLLEVBQUVILFVBQVUsQ0FBQ0csS0FBWCxHQUFtQlIsS0FIckI7QUFJTEgsSUFBQUEsTUFBTSxFQUFJUSxVQUFVLENBQUNSLE1BQVgsR0FBb0JHLEtBQXJCLEdBQThCQztBQUpsQyxHQUFQO0FBTUQsQ0FkRDtBQWdCQVYsUUFBUSxDQUFDYSxrQkFBVCxtQ0FBOEIsYUFBa0I7QUFDOUMsUUFBTUssT0FBTyxHQUFHLHdFQUFoQjtBQUNBLGVBQWEsS0FBS0MsWUFBTCxDQUFrQkMsV0FBbEIsQ0FBOEJGLE9BQTlCLENBQWI7QUFDRCxDQUhEO0FBS0FHLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjcEIsVUFBZCxFQUEwQkYsUUFBMUIsRUFBb0NDLE9BQXBDO2VBRWVDLFUiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY29tbWFuZHMgPSB7fSwgaGVscGVycyA9IHt9LCBleHRlbnNpb25zID0ge307XG5cbi8vIHRoaXMgZnVuY3Rpb24gaXMgbWVtb2l6ZWQgaW4gSU9TRHJpdmVyJ3MgY29uc3RydWN0b3JcbmNvbW1hbmRzLmdldERldmljZVBpeGVsUmF0aW8gPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHNjcmVlbkhlaWdodCA9IChhd2FpdCB0aGlzLmdldFdpbmRvd1NpemUoKSkuaGVpZ2h0O1xuICAvLyBUaGVyZSBpcyBubyB3YXkgdG8gZ3JhYiBzY2FsZSBmcm9tIFVJQXV0b21hdGlvbi4gQWxsIGRldmljZXMgaGF2ZSBzY2FsZSAyLjAgZXhjZXB0IGlQaG9uZSA2KywgaVBob25lIDZzKywgaVBob25lNysgLSAzLjAuXG4gIGNvbnN0IHNjcmVlbkhlaWdodE9mUGx1c0RldmljZXMgPSA3MzY7XG4gIHJldHVybiBzY3JlZW5IZWlnaHQgPT09IHNjcmVlbkhlaWdodE9mUGx1c0RldmljZXMgPyAzLjAgOiAyLjA7XG59O1xuXG5jb21tYW5kcy5nZXRWaWV3cG9ydFJlY3QgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHNjYWxlID0gYXdhaXQgdGhpcy5nZXREZXZpY2VQaXhlbFJhdGlvKCk7XG4gIC8vIHN0YXR1cyBiYXIgaGVpZ2h0IGNvbWVzIGluIHVuc2NhbGVkLCBzbyBzY2FsZSBpdFxuICBjb25zdCBzdGF0dXNCYXJIZWlnaHQgPSBNYXRoLnJvdW5kKGF3YWl0IHRoaXMuZ2V0U3RhdHVzQmFySGVpZ2h0KCkgKiBzY2FsZSk7XG4gIGNvbnN0IHdpbmRvd1NpemUgPSBhd2FpdCB0aGlzLmdldFdpbmRvd1NpemUoKTtcblxuICAvLyBpb3MgcmV0dXJucyBjb29yZGluYXRlcy9kaW1lbnNpb25zIGluIGxvZ2ljYWwgcGl4ZWxzLCBub3QgZGV2aWNlIHBpeGVscyxcbiAgLy8gc28gc2NhbGUgdXAgdG8gZGV2aWNlIHBpeGVscy4gc3RhdHVzIGJhciBoZWlnaHQgaXMgYWxyZWFkeSBzY2FsZWQuXG4gIHJldHVybiB7XG4gICAgbGVmdDogMCxcbiAgICB0b3A6IHN0YXR1c0JhckhlaWdodCxcbiAgICB3aWR0aDogd2luZG93U2l6ZS53aWR0aCAqIHNjYWxlLFxuICAgIGhlaWdodDogKCh3aW5kb3dTaXplLmhlaWdodCAqIHNjYWxlKSAtIHN0YXR1c0JhckhlaWdodCksXG4gIH07XG59O1xuXG5jb21tYW5kcy5nZXRTdGF0dXNCYXJIZWlnaHQgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IGNvbW1hbmQgPSAnVUlBVGFyZ2V0LmxvY2FsVGFyZ2V0KCkuZnJvbnRNb3N0QXBwKCkuc3RhdHVzQmFyKCkucmVjdCgpLnNpemUuaGVpZ2h0Oyc7XG4gIHJldHVybiBhd2FpdCB0aGlzLnVpQXV0b0NsaWVudC5zZW5kQ29tbWFuZChjb21tYW5kKTtcbn07XG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgY29tbWFuZHMsIGhlbHBlcnMpO1xuZXhwb3J0IHsgY29tbWFuZHMsIGhlbHBlcnMgfTtcbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXSwiZmlsZSI6ImxpYi9jb21tYW5kcy9kZXZpY2UuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
